ASC Syntax

Operators:

	Arithmetic:
	- Addition: __ + __
	- Subtraction: __ - __
	- Multiplication: __ * __
	- Division: __ / __
	- Remainder: __ % __

	Logic:
	- And __ /\ __
	- Or __ \/ __ 
	- Not -, __
	
	Binary Logic:
	- Xor: __ ^^ __ 

	Structured Data:
	- Field access: __ . __
	- Index Access: __ _ __

	Indirection:
	- Location Of: ~/ __
	- In Location: __ /.

	Reflection:
	- Comment Delimiter: `` __ ... ``
	- Symbol Quotation: '
	- Type Of: [- __
	- Indicies In: # __
	- Size Of: $# __

	Representations:
	- Equal Size Cast: __ [=> __
	- Inequal Size Cast: __ [-> __

	Assignment:
	- Single Assignment: __ = __
	- Destructuring Assignment: ( __ ... ) =: __

	Conditional Execution: ? ... ( ... ) ( ... )

Evaluation:
- Expression Evaluation: ( __ ... )
- Function Evaluation: ( __ __ ... )
	The first expression is a function name.
- Continuation: ( . __ )

Function Declaration:
- Opening Delimiter: { ...
- Closing Delimiter: ... }
- Return Parameter Prefix: -> __ ...
- Definition Prefix: | __ ... 

Type Declaration:
- Opening Delimiter: [ ...
- Closing Delimiter: ... ]
- Field Separator: ; ...
- Required Use Prefix: . __
- Optional Use Prefix: , __

Primitive Type Names:
- Any Type: [*]
- None Type: [!]
- Boolean True: t T
- Boolean False: f F
- Boolean: B b
- Natural Number: N n
- Integer: Z z
- Rational Number: Q q
- Type: []
- Expression: ()
- Function: {}



